{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/homepage/homepage.component.ts","./src/app/components/homepage/homepage.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/product/product.component.ts","./src/app/components/product/product.component.html","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/services/base.service.ts","./src/app/services/collection.service.ts","./src/app/services/nft.service.ts","./src/app/utils/format.utils.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomepageComponent } from './components/homepage/homepage.component';\n\nconst routes: Routes = [{ path: '**', component: HomepageComponent }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n","<!-- <app-navbar></app-navbar> -->\n<div class=\"main-div mat-typography\" fxLayout=\"row\" fxLayoutAlign=\"center\">\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ProductComponent } from './components/product/product.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { UnitFormatPipe } from './utils/format.utils';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomepageComponent,\n    ProductsComponent,\n    ProductComponent,\n    NavbarComponent,\n    UnitFormatPipe,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    MatChipsModule,\n    MatIconModule,\n    MatSelectModule,\n    MatToolbarModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component } from '@angular/core';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { Collection } from '@soonaverse/interfaces';\nimport { BehaviorSubject } from 'rxjs';\nimport { CollectionService } from 'src/app/services/collection.service';\nimport { environment } from 'src/environments/environment';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss'],\n})\nexport class HomepageComponent {\n  public collection$: BehaviorSubject<Collection | undefined> = new BehaviorSubject<\n    Collection | undefined\n  >(undefined);\n  constructor(private collectionService: CollectionService) {}\n\n  public ngOnInit(): void {\n    this.collectionService\n      .getOne(environment.collection)\n      .pipe(untilDestroyed(this))\n      .subscribe(this.collection$);\n  }\n}\n","<div class=\"header\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <h1 class=\"jumbo\">\n    {{ (collection$ | async)?.name }} (floor price:\n    {{\n      (collection$ | async)?.floorPrice | unitFormat : (collection$ | async)?.mintingData?.network\n    }})\n  </h1>\n  <h2>{{ (collection$ | async)?.description }}</h2>\n</div>\n<app-products></app-products>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-toolbar>\n  <button mat-icon-button aria-label=\"Home button\" routerLink=\"/\">\n    <mat-icon>home</mat-icon>\n  </button>\n</mat-toolbar>\n","import { Component, Input } from '@angular/core';\nimport { FILE_SIZES, Nft } from '@soonaverse/interfaces';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss'],\n})\nexport class ProductComponent {\n  @Input() nft: Nft | undefined;\n  public getUrl(org: string, size?: FILE_SIZES): string {\n    const extensionPat = /\\.[^/.]+$/;\n    const ext = org.match(extensionPat)?.[0]?.replace('.', '_');\n    return org.replace(extensionPat, ext + '_' + size + '.webp');\n  }\n\n  public medSizeImg(org?: string): string {\n    if (!org) return '';\n\n    return this.getUrl(org, FILE_SIZES.medium);\n  }\n\n  public goToSoonaverseNft(): void {\n    window.open('https://soonaverse.com/nft/' + this.nft?.uid);\n  }\n}\n","<mat-card class=\"product-card\" (click)=\"goToSoonaverseNft()\">\n  <mat-card-title\n    >{{ nft?.name }} (price:\n    {{ nft?.price | unitFormat : nft?.mintingData?.network }})</mat-card-title\n  >\n  {{ nft?.description }}\n  <img mat-card-image [src]=\"medSizeImg(nft?.media)\" />\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { Nft } from '@soonaverse/interfaces';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { NftService } from '../../services/nft.service';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { environment } from 'src/environments/environment';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss'],\n})\nexport class ProductsComponent implements OnInit {\n  public products$: BehaviorSubject<Nft[] | undefined> = new BehaviorSubject<Nft[] | undefined>([]);\n  constructor(private nftService: NftService) {}\n\n  public ngOnInit(): void {\n    this.nftService\n      .getByCollection(environment.collection)\n      .pipe(untilDestroyed(this))\n      .subscribe(this.products$);\n  }\n}\n","<ul fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\">\n  <app-product *ngFor=\"let p of products$ | async | slice : 0 : 3\" [nft]=\"p\"></app-product>\n</ul>\n","import { SoonEnv } from '@soonaverse/lib';\nimport { from, Observable } from 'rxjs';\n\nexport class BaseService<T, K> {\n  protected repo: K;\n\n  constructor(repository: any) {\n    this.repo = new repository(SoonEnv.PROD);\n  }\n\n  getOne(id: string): Observable<T | undefined> {\n    return from(<Observable<T | undefined>>(<any>this.repo).getById(id));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Collection, CollectionRepository } from '@soonaverse/lib';\nimport { BaseService } from './base.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CollectionService extends BaseService<Collection, CollectionRepository> {\n  constructor() {\n    super(CollectionRepository);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Nft, NftRepository } from '@soonaverse/lib';\nimport { from, Observable } from 'rxjs';\nimport { BaseService } from './base.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NftService extends BaseService<Nft, NftRepository> {\n  constructor() {\n    super(NftRepository);\n  }\n\n  getByCollection(col: string): Observable<Nft[] | undefined> {\n    return from(this.repo.getByField('collection', col));\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Network } from '@soonaverse/interfaces';\n\nexport const NETWORK_DETAIL = {\n  [Network.IOTA]: {\n    label: 'MIOTA',\n    divideBy: 1000 * 1000,\n  },\n  [Network.ATOI]: {\n    label: 'MATOI',\n    divideBy: 1000 * 1000,\n  },\n  [Network.SMR]: {\n    label: 'SMR',\n    divideBy: 1000 * 1000,\n  },\n  [Network.RMS]: {\n    label: 'RMS',\n    divideBy: 1000 * 1000,\n  },\n};\n\n@Pipe({ name: 'unitFormat' })\nexport class UnitFormatPipe implements PipeTransform {\n  transform(\n    value: number | null | undefined,\n    network?: Network | null,\n    removeZeroes = false,\n    showUnit = true,\n    defDecimals = 2,\n  ): string {\n    if (!network) {\n      network = Network.IOTA;\n    }\n\n    if (!value) {\n      value = 0;\n    }\n\n    value = value / NETWORK_DETAIL[network].divideBy;\n\n    const parts = (removeZeroes ? value : value.toFixed(defDecimals)).toString().split('.');\n    const formattedValue =\n      parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + (parts.length === 2 ? '.' + parts[1] : '');\n    return formattedValue + (showUnit ? ` ${NETWORK_DETAIL[network].label}` : '');\n  }\n}\n","export const environment = {\n  production: false,\n  collection: '0x5427acc3b31ee211caffb35ddd276c75ceff82ef',\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"names":["RouterModule","HomepageComponent","routes","path","component","AppRoutingModule","forRoot","imports","exports","AppComponent","selectors","decls","vars","consts","template","i0","BrowserModule","FlexLayoutModule","MatButtonModule","MatCardModule","MatChipsModule","MatIconModule","MatSelectModule","MatToolbarModule","BrowserAnimationsModule","NavbarComponent","ProductComponent","ProductsComponent","UnitFormatPipe","AppModule","bootstrap","declarations","UntilDestroy","untilDestroyed","BehaviorSubject","environment","constructor","collectionService","undefined","ngOnInit","getOne","collection","pipe","subscribe","collection$","FILE_SIZES","getUrl","org","size","extensionPat","ext","match","replace","medSizeImg","medium","goToSoonaverseNft","window","open","nft","uid","inputs","ctx","nftService","getByCollection","products$","SoonEnv","from","BaseService","repository","repo","PROD","id","getById","CollectionRepository","CollectionService","factory","providedIn","NftRepository","NftService","col","getByField","Network","NETWORK_DETAIL","IOTA","label","divideBy","ATOI","SMR","RMS","transform","value","network","removeZeroes","showUnit","defDecimals","parts","toFixed","toString","split","formattedValue","length","pure","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}